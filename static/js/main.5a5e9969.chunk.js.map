{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","onTabSelected","selectedTabId","className","map","tab","href","content","onClick","event","preventDefault","id","title","App","state","selectedTab","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAQaA,EAAwB,SAACC,GACpC,IAAQC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,cAE7B,OACE,mCACE,oBAAIC,UAAU,mBAAd,SACGH,EAAKI,KAAI,SAAAC,GAAG,OACX,qBAEEF,UAAU,2BAFZ,UAIE,mBACEG,KAAMD,EAAIE,QACVJ,UAAU,mEACVK,QAAS,SAACC,GACRA,EAAMC,iBACFR,IAAkBG,EAAIM,IACxBV,EAAcI,IANpB,SAUGA,EAAIO,QAGNV,IAAkBG,EAAIM,IACrB,mBAAGR,UAAU,8DAAb,SAA4EE,EAAIE,YAjB7EF,EAAIM,YCXfX,G,MAAc,CAClB,CAAEW,GAAI,QAASC,MAAO,QAASL,QAAS,eACxC,CAAEI,GAAI,QAASC,MAAO,QAASL,QAAS,eACxC,CAAEI,GAAI,QAASC,MAAO,QAASL,QAAS,iBAQpCM,E,4MACJC,MAAe,CACbC,YAAaf,EAAK,GAClBE,cAAeF,EAAK,GAAGW,I,EAGzBV,cAAgB,SAACI,GACf,EAAKW,SAAS,CACZD,YAAaV,EACbH,cAAeG,EAAIM,M,4CAIvB,WACE,MAAuCM,KAAKH,MAApCC,EAAR,EAAQA,YAAab,EAArB,EAAqBA,cAErB,OACE,sBAAKC,UAAU,MAAf,UAEE,sBAAKA,UAAU,cAAf,UACE,6BACG,qBAGH,mBAAGA,UAAU,kBAAb,SACGY,EAAYH,WAIjB,cAAC,EAAD,CACEZ,KAAMA,EACNE,cAAeA,EACfD,cAAegB,KAAKhB,uB,GAhCZiB,IAAMC,WAuCTN,ICpDfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5a5e9969.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void\n}\nexport const Tabs: React.FC<Props> = (props) => {\n  const { tabs, onTabSelected, selectedTabId } = props;\n\n  return (\n    <>\n      <ul className=\"row mx-auto w-75\">\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            className=\"col-4 d-flex flex-column\"\n          >\n            <a\n              href={tab.content}\n              className=\"border border-secondary rounded text-decoration-none text-center\"\n              onClick={(event) => {\n                event.preventDefault();\n                if (selectedTabId !== tab.id) {\n                  onTabSelected(tab);\n                }\n              }}\n            >\n              {tab.title}\n            </a>\n\n            {selectedTabId === tab.id && (\n              <p className=\"text-center border border-top-0 rounded py-5 text-secondary\">{tab.content}</p>\n            )}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport { Tabs } from './components/Tabs';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface State {\n  selectedTab: Tab;\n  selectedTabId: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n    selectedTabId: tabs[0].id,\n  };\n\n  onTabSelected = (tab: Tab) => {\n    this.setState({\n      selectedTab: tab,\n      selectedTabId: tab.id,\n    });\n  };\n\n  render() {\n    const { selectedTab, selectedTabId } = this.state;\n\n    return (\n      <div className=\"App\">\n\n        <div className=\"text-center\">\n          <h1>\n            {'Selected tab is '}\n          </h1>\n\n          <p className=\"h3 text-primary\">\n            {selectedTab.title}\n          </p>\n        </div>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}